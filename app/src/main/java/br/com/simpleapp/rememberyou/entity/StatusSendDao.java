package br.com.simpleapp.rememberyou.entity;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import br.com.simpleapp.rememberyou.entity.StatusSend;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "STATUS_SEND".
*/
public class StatusSendDao extends AbstractDao<StatusSend, Long> {

    public static final String TABLENAME = "STATUS_SEND";

    /**
     * Properties of entity StatusSend.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property Email = new Property(2, String.class, "email", false, "EMAIL");
        public final static Property Emotion = new Property(3, String.class, "emotion", false, "EMOTION");
        public final static Property State = new Property(4, Integer.class, "state", false, "STATE");
        public final static Property DateTime = new Property(5, java.util.Date.class, "dateTime", false, "DATE_TIME");
    };


    public StatusSendDao(DaoConfig config) {
        super(config);
    }
    
    public StatusSendDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"STATUS_SEND\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"EMAIL\" TEXT NOT NULL ," + // 2: email
                "\"EMOTION\" TEXT," + // 3: emotion
                "\"STATE\" INTEGER," + // 4: state
                "\"DATE_TIME\" INTEGER);"); // 5: dateTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"STATUS_SEND\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, StatusSend entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
        stmt.bindString(3, entity.getEmail());
 
        String emotion = entity.getEmotion();
        if (emotion != null) {
            stmt.bindString(4, emotion);
        }
 
        Integer state = entity.getState();
        if (state != null) {
            stmt.bindLong(5, state);
        }
 
        java.util.Date dateTime = entity.getDateTime();
        if (dateTime != null) {
            stmt.bindLong(6, dateTime.getTime());
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public StatusSend readEntity(Cursor cursor, int offset) {
        StatusSend entity = new StatusSend( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.getString(offset + 2), // email
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // emotion
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // state
            cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)) // dateTime
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, StatusSend entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setEmail(cursor.getString(offset + 2));
        entity.setEmotion(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setState(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setDateTime(cursor.isNull(offset + 5) ? null : new java.util.Date(cursor.getLong(offset + 5)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(StatusSend entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(StatusSend entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
